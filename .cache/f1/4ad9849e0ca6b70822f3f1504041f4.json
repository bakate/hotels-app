{"id":"../node_modules/react-stripe-elements/es/components/inject.js","dependencies":[{"name":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\package.json","includedInParent":true,"mtime":1580818216811},{"name":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\package.json","includedInParent":true,"mtime":1580818120311},{"name":"react","loc":{"line":11,"column":21},"parent":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\es\\components\\inject.js","resolved":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react\\index.js"},{"name":"./Elements","loc":{"line":15,"column":24},"parent":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\es\\components\\inject.js","resolved":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\es\\components\\Elements.js"},{"name":"./Provider","loc":{"line":17,"column":24},"parent":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\es\\components\\inject.js","resolved":"C:\\Users\\backa\\React\\hotelsProject\\frontend\\node_modules\\react-stripe-elements\\es\\components\\Provider.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Elements = require('./Elements');\n\nvar _Provider = require('./Provider');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// react-redux does a bunch of stuff with pure components / checking if it needs to re-render.\n// not sure if we need to do the same.\nvar inject = function inject(WrappedComponent) {\n  var _class, _temp;\n\n  var componentOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _componentOptions$wit = componentOptions.withRef,\n      withRef = _componentOptions$wit === undefined ? false : _componentOptions$wit;\n\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class(props, context) {\n      _classCallCheck(this, _class);\n\n      if (!context || !context.getRegisteredElements) {\n        throw new Error('It looks like you are trying to inject Stripe context outside of an Elements context.\\nPlease be sure the component that calls createSource or createToken is within an <Elements> component.');\n      }\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.parseElementOrData = function (elementOrOptions) {\n        return elementOrOptions && (typeof elementOrOptions === 'undefined' ? 'undefined' : _typeof(elementOrOptions)) === 'object' && elementOrOptions._frame && _typeof(elementOrOptions._frame) === 'object' && elementOrOptions._frame.id && typeof elementOrOptions._frame.id === 'string' && typeof elementOrOptions._componentName === 'string' ? { type: 'element', element: elementOrOptions } : { type: 'data', data: elementOrOptions };\n      };\n\n      _this.findElement = function (filterBy, specifiedType) {\n        var allElements = _this.context.getRegisteredElements();\n        var filteredElements = allElements.filter(function (e) {\n          return e[filterBy];\n        });\n        var matchingElements = specifiedType === 'auto' ? filteredElements : filteredElements.filter(function (e) {\n          return e[filterBy] === specifiedType;\n        });\n\n        if (matchingElements.length === 1) {\n          return matchingElements[0].element;\n        } else if (matchingElements.length > 1) {\n          throw new Error('You did not specify the type of Source, Token, or PaymentMethod to create.\\n        We could not infer which Element you want to use for this operation.');\n        } else {\n          return null;\n        }\n      };\n\n      _this.requireElement = function (filterBy, specifiedType) {\n        var element = _this.findElement(filterBy, specifiedType);\n        if (element) {\n          return element;\n        } else {\n          throw new Error('You did not specify the type of Source, Token, or PaymentMethod to create.\\n        We could not infer which Element you want to use for this operation.');\n        }\n      };\n\n      _this.wrappedCreateToken = function (stripe) {\n        return function () {\n          var tokenTypeOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          if (tokenTypeOrOptions && (typeof tokenTypeOrOptions === 'undefined' ? 'undefined' : _typeof(tokenTypeOrOptions)) === 'object') {\n            // First argument is options; infer the Element and tokenize\n            var opts = tokenTypeOrOptions;\n\n            var tokenType = opts.type,\n                rest = _objectWithoutProperties(opts, ['type']);\n\n            var specifiedType = typeof tokenType === 'string' ? tokenType : 'auto';\n            // Since only options were passed in, a corresponding Element must exist\n            // for the tokenization to succeed -- thus we call requireElement.\n            var element = _this.requireElement('impliedTokenType', specifiedType);\n            return stripe.createToken(element, rest);\n          } else if (typeof tokenTypeOrOptions === 'string') {\n            // First argument is token type; tokenize with token type and options\n            var _tokenType = tokenTypeOrOptions;\n            return stripe.createToken(_tokenType, options);\n          } else {\n            // If a bad value was passed in for options, throw an error.\n            throw new Error('Invalid options passed to createToken. Expected an object, got ' + (typeof tokenTypeOrOptions === 'undefined' ? 'undefined' : _typeof(tokenTypeOrOptions)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedCreateSource = function (stripe) {\n        return function () {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            if (typeof options.type !== 'string') {\n              throw new Error('Invalid Source type passed to createSource. Expected string, got ' + _typeof(options.type) + '.');\n            }\n\n            var element = _this.findElement('impliedSourceType', options.type);\n            if (element) {\n              // If an Element exists for the source type, use that to create the\n              // corresponding source.\n              //\n              // NOTE: this prevents users from independently creating sources of\n              // type `foo` if an Element that can create `foo` sources exists in\n              // the current <Elements /> context.\n              return stripe.createSource(element, options);\n            } else {\n              // If no Element exists for the source type, directly create a source.\n              return stripe.createSource(options);\n            }\n          } else {\n            // If a bad value was passed in for options, throw an error.\n            throw new Error('Invalid options passed to createSource. Expected an object, got ' + (typeof options === 'undefined' ? 'undefined' : _typeof(options)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedCreatePaymentMethod = function (stripe) {\n        return function (paymentMethodType, elementOrData, maybeData) {\n          if (paymentMethodType && (typeof paymentMethodType === 'undefined' ? 'undefined' : _typeof(paymentMethodType)) === 'object') {\n            return stripe.createPaymentMethod(paymentMethodType);\n          }\n\n          if (!paymentMethodType || typeof paymentMethodType !== 'string') {\n            throw new Error('Invalid PaymentMethod type passed to createPaymentMethod. Expected a string, got ' + (typeof paymentMethodType === 'undefined' ? 'undefined' : _typeof(paymentMethodType)) + '.');\n          }\n\n          var elementOrDataResult = _this.parseElementOrData(elementOrData);\n\n          // Second argument is Element; use passed in Element\n          if (elementOrDataResult.type === 'element') {\n            var _element = elementOrDataResult.element;\n\n            if (maybeData) {\n              return stripe.createPaymentMethod(paymentMethodType, _element, maybeData);\n            } else {\n              return stripe.createPaymentMethod(paymentMethodType, _element);\n            }\n          }\n\n          // Second argument is data or undefined; infer the Element\n          var data = elementOrDataResult.data;\n\n          var element = _this.findElement('impliedPaymentMethodType', paymentMethodType);\n\n          if (element) {\n            return data ? stripe.createPaymentMethod(paymentMethodType, element, data) : stripe.createPaymentMethod(paymentMethodType, element);\n          }\n\n          if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n            return stripe.createPaymentMethod(paymentMethodType, data);\n          } else if (!data) {\n            throw new Error('Could not find an Element that can be used to create a PaymentMethod of type: ' + paymentMethodType + '.');\n          } else {\n            // If a bad value was passed in for data, throw an error.\n            throw new Error('Invalid data passed to createPaymentMethod. Expected an object, got ' + (typeof data === 'undefined' ? 'undefined' : _typeof(data)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedHandleCardX = function (stripe, method) {\n        return function (clientSecret, elementOrData, maybeData) {\n          if (!clientSecret || typeof clientSecret !== 'string') {\n            // If a bad value was passed in for clientSecret, throw an error.\n            throw new Error('Invalid PaymentIntent client secret passed to handleCardPayment. Expected string, got ' + (typeof clientSecret === 'undefined' ? 'undefined' : _typeof(clientSecret)) + '.');\n          }\n\n          var elementOrDataResult = _this.parseElementOrData(elementOrData);\n\n          // Second argument is Element; handle with element\n          if (elementOrDataResult.type === 'element') {\n            var _element2 = elementOrDataResult.element;\n\n            if (maybeData) {\n              return stripe[method](clientSecret, _element2, maybeData);\n            } else {\n              return stripe[method](clientSecret, _element2);\n            }\n          }\n\n          // Second argument is data or undefined; see if we can find a mounted Element\n          // that can create card PaymentMethods\n          var data = elementOrDataResult.data;\n\n          var element = _this.findElement('impliedPaymentMethodType', 'card');\n\n          if (element) {\n            // If an Element exists that can create card PaymentMethods use it. Otherwise\n            // assume that we must be calling with data only.\n            //\n            // NOTE: this prevents users from using handleCard* with an existing\n            // Source or PaymentMethod if an Element that can create card PaymentMethods\n            // exists in the current <Elements /> context.\n            if (data) {\n              return stripe[method](clientSecret, element, data);\n            } else {\n              return stripe[method](clientSecret, element);\n            }\n          } else if (data) {\n            // if no element exists call handleCard* directly (with data)\n            return stripe[method](clientSecret, data);\n          } else {\n            // if no element exists call handleCard* directly (with only the clientSecret)\n            return stripe[method](clientSecret);\n          }\n        };\n      };\n\n      if (_this.context.tag === 'sync') {\n        _this.state = {\n          stripe: _this.stripeProps(_this.context.stripe)\n        };\n      } else {\n        _this.state = {\n          stripe: null\n        };\n      }\n      return _this;\n    }\n\n    _class.prototype.componentDidMount = function componentDidMount() {\n      var _this2 = this;\n\n      if (this.context.tag === 'async') {\n        this.context.addStripeLoadListener(function (stripe) {\n          _this2.setState({\n            stripe: _this2.stripeProps(stripe)\n          });\n        });\n      } else {\n        // when 'sync', it's already set in the constructor.\n      }\n    };\n\n    _class.prototype.getWrappedInstance = function getWrappedInstance() {\n      if (!withRef) {\n        throw new Error('To access the wrapped instance, the `{withRef: true}` option must be set when calling `injectStripe()`');\n      }\n      return this.wrappedInstance;\n    };\n\n    _class.prototype.stripeProps = function stripeProps(stripe) {\n      return _extends({}, stripe, {\n        // These are the only functions that take elements.\n        createToken: this.wrappedCreateToken(stripe),\n        createSource: this.wrappedCreateSource(stripe),\n        createPaymentMethod: this.wrappedCreatePaymentMethod(stripe),\n        handleCardPayment: this.wrappedHandleCardX(stripe, 'handleCardPayment'),\n        handleCardSetup: this.wrappedHandleCardX(stripe, 'handleCardSetup')\n      });\n    };\n\n    // Finds an Element by the specified type, if one exists.\n    // Throws if multiple Elements match.\n\n\n    // Require that exactly one Element is found for the specified type.\n    // Throws if no Element is found.\n\n\n    // Wraps createToken in order to infer the Element that is being tokenized.\n\n\n    // Wraps createSource in order to infer the Element that is being used for\n    // source creation.\n\n\n    // Wraps createPaymentMethod in order to infer the Element that is being\n    // used for PaymentMethod creation.\n\n\n    _class.prototype.render = function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {\n        stripe: this.state.stripe,\n        elements: this.context.elements,\n        ref: withRef ? function (c) {\n          _this3.wrappedInstance = c;\n        } : null\n      }));\n    };\n\n    return _class;\n  }(_react2.default.Component), _class.contextTypes = _extends({}, _Provider.providerContextTypes, _Elements.injectContextTypes), _class.displayName = 'InjectStripe(' + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + ')', _temp;\n};\n\nexports.default = inject;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/react-stripe-elements/es/components/inject.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}}],"sources":{"../node_modules/react-stripe-elements/es/components/inject.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Elements = require('./Elements');\n\nvar _Provider = require('./Provider');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// react-redux does a bunch of stuff with pure components / checking if it needs to re-render.\n// not sure if we need to do the same.\nvar inject = function inject(WrappedComponent) {\n  var _class, _temp;\n\n  var componentOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _componentOptions$wit = componentOptions.withRef,\n      withRef = _componentOptions$wit === undefined ? false : _componentOptions$wit;\n\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class(props, context) {\n      _classCallCheck(this, _class);\n\n      if (!context || !context.getRegisteredElements) {\n        throw new Error('It looks like you are trying to inject Stripe context outside of an Elements context.\\nPlease be sure the component that calls createSource or createToken is within an <Elements> component.');\n      }\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.parseElementOrData = function (elementOrOptions) {\n        return elementOrOptions && (typeof elementOrOptions === 'undefined' ? 'undefined' : _typeof(elementOrOptions)) === 'object' && elementOrOptions._frame && _typeof(elementOrOptions._frame) === 'object' && elementOrOptions._frame.id && typeof elementOrOptions._frame.id === 'string' && typeof elementOrOptions._componentName === 'string' ? { type: 'element', element: elementOrOptions } : { type: 'data', data: elementOrOptions };\n      };\n\n      _this.findElement = function (filterBy, specifiedType) {\n        var allElements = _this.context.getRegisteredElements();\n        var filteredElements = allElements.filter(function (e) {\n          return e[filterBy];\n        });\n        var matchingElements = specifiedType === 'auto' ? filteredElements : filteredElements.filter(function (e) {\n          return e[filterBy] === specifiedType;\n        });\n\n        if (matchingElements.length === 1) {\n          return matchingElements[0].element;\n        } else if (matchingElements.length > 1) {\n          throw new Error('You did not specify the type of Source, Token, or PaymentMethod to create.\\n        We could not infer which Element you want to use for this operation.');\n        } else {\n          return null;\n        }\n      };\n\n      _this.requireElement = function (filterBy, specifiedType) {\n        var element = _this.findElement(filterBy, specifiedType);\n        if (element) {\n          return element;\n        } else {\n          throw new Error('You did not specify the type of Source, Token, or PaymentMethod to create.\\n        We could not infer which Element you want to use for this operation.');\n        }\n      };\n\n      _this.wrappedCreateToken = function (stripe) {\n        return function () {\n          var tokenTypeOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          if (tokenTypeOrOptions && (typeof tokenTypeOrOptions === 'undefined' ? 'undefined' : _typeof(tokenTypeOrOptions)) === 'object') {\n            // First argument is options; infer the Element and tokenize\n            var opts = tokenTypeOrOptions;\n\n            var tokenType = opts.type,\n                rest = _objectWithoutProperties(opts, ['type']);\n\n            var specifiedType = typeof tokenType === 'string' ? tokenType : 'auto';\n            // Since only options were passed in, a corresponding Element must exist\n            // for the tokenization to succeed -- thus we call requireElement.\n            var element = _this.requireElement('impliedTokenType', specifiedType);\n            return stripe.createToken(element, rest);\n          } else if (typeof tokenTypeOrOptions === 'string') {\n            // First argument is token type; tokenize with token type and options\n            var _tokenType = tokenTypeOrOptions;\n            return stripe.createToken(_tokenType, options);\n          } else {\n            // If a bad value was passed in for options, throw an error.\n            throw new Error('Invalid options passed to createToken. Expected an object, got ' + (typeof tokenTypeOrOptions === 'undefined' ? 'undefined' : _typeof(tokenTypeOrOptions)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedCreateSource = function (stripe) {\n        return function () {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            if (typeof options.type !== 'string') {\n              throw new Error('Invalid Source type passed to createSource. Expected string, got ' + _typeof(options.type) + '.');\n            }\n\n            var element = _this.findElement('impliedSourceType', options.type);\n            if (element) {\n              // If an Element exists for the source type, use that to create the\n              // corresponding source.\n              //\n              // NOTE: this prevents users from independently creating sources of\n              // type `foo` if an Element that can create `foo` sources exists in\n              // the current <Elements /> context.\n              return stripe.createSource(element, options);\n            } else {\n              // If no Element exists for the source type, directly create a source.\n              return stripe.createSource(options);\n            }\n          } else {\n            // If a bad value was passed in for options, throw an error.\n            throw new Error('Invalid options passed to createSource. Expected an object, got ' + (typeof options === 'undefined' ? 'undefined' : _typeof(options)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedCreatePaymentMethod = function (stripe) {\n        return function (paymentMethodType, elementOrData, maybeData) {\n          if (paymentMethodType && (typeof paymentMethodType === 'undefined' ? 'undefined' : _typeof(paymentMethodType)) === 'object') {\n            return stripe.createPaymentMethod(paymentMethodType);\n          }\n\n          if (!paymentMethodType || typeof paymentMethodType !== 'string') {\n            throw new Error('Invalid PaymentMethod type passed to createPaymentMethod. Expected a string, got ' + (typeof paymentMethodType === 'undefined' ? 'undefined' : _typeof(paymentMethodType)) + '.');\n          }\n\n          var elementOrDataResult = _this.parseElementOrData(elementOrData);\n\n          // Second argument is Element; use passed in Element\n          if (elementOrDataResult.type === 'element') {\n            var _element = elementOrDataResult.element;\n\n            if (maybeData) {\n              return stripe.createPaymentMethod(paymentMethodType, _element, maybeData);\n            } else {\n              return stripe.createPaymentMethod(paymentMethodType, _element);\n            }\n          }\n\n          // Second argument is data or undefined; infer the Element\n          var data = elementOrDataResult.data;\n\n          var element = _this.findElement('impliedPaymentMethodType', paymentMethodType);\n\n          if (element) {\n            return data ? stripe.createPaymentMethod(paymentMethodType, element, data) : stripe.createPaymentMethod(paymentMethodType, element);\n          }\n\n          if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n            return stripe.createPaymentMethod(paymentMethodType, data);\n          } else if (!data) {\n            throw new Error('Could not find an Element that can be used to create a PaymentMethod of type: ' + paymentMethodType + '.');\n          } else {\n            // If a bad value was passed in for data, throw an error.\n            throw new Error('Invalid data passed to createPaymentMethod. Expected an object, got ' + (typeof data === 'undefined' ? 'undefined' : _typeof(data)) + '.');\n          }\n        };\n      };\n\n      _this.wrappedHandleCardX = function (stripe, method) {\n        return function (clientSecret, elementOrData, maybeData) {\n          if (!clientSecret || typeof clientSecret !== 'string') {\n            // If a bad value was passed in for clientSecret, throw an error.\n            throw new Error('Invalid PaymentIntent client secret passed to handleCardPayment. Expected string, got ' + (typeof clientSecret === 'undefined' ? 'undefined' : _typeof(clientSecret)) + '.');\n          }\n\n          var elementOrDataResult = _this.parseElementOrData(elementOrData);\n\n          // Second argument is Element; handle with element\n          if (elementOrDataResult.type === 'element') {\n            var _element2 = elementOrDataResult.element;\n\n            if (maybeData) {\n              return stripe[method](clientSecret, _element2, maybeData);\n            } else {\n              return stripe[method](clientSecret, _element2);\n            }\n          }\n\n          // Second argument is data or undefined; see if we can find a mounted Element\n          // that can create card PaymentMethods\n          var data = elementOrDataResult.data;\n\n          var element = _this.findElement('impliedPaymentMethodType', 'card');\n\n          if (element) {\n            // If an Element exists that can create card PaymentMethods use it. Otherwise\n            // assume that we must be calling with data only.\n            //\n            // NOTE: this prevents users from using handleCard* with an existing\n            // Source or PaymentMethod if an Element that can create card PaymentMethods\n            // exists in the current <Elements /> context.\n            if (data) {\n              return stripe[method](clientSecret, element, data);\n            } else {\n              return stripe[method](clientSecret, element);\n            }\n          } else if (data) {\n            // if no element exists call handleCard* directly (with data)\n            return stripe[method](clientSecret, data);\n          } else {\n            // if no element exists call handleCard* directly (with only the clientSecret)\n            return stripe[method](clientSecret);\n          }\n        };\n      };\n\n      if (_this.context.tag === 'sync') {\n        _this.state = {\n          stripe: _this.stripeProps(_this.context.stripe)\n        };\n      } else {\n        _this.state = {\n          stripe: null\n        };\n      }\n      return _this;\n    }\n\n    _class.prototype.componentDidMount = function componentDidMount() {\n      var _this2 = this;\n\n      if (this.context.tag === 'async') {\n        this.context.addStripeLoadListener(function (stripe) {\n          _this2.setState({\n            stripe: _this2.stripeProps(stripe)\n          });\n        });\n      } else {\n        // when 'sync', it's already set in the constructor.\n      }\n    };\n\n    _class.prototype.getWrappedInstance = function getWrappedInstance() {\n      if (!withRef) {\n        throw new Error('To access the wrapped instance, the `{withRef: true}` option must be set when calling `injectStripe()`');\n      }\n      return this.wrappedInstance;\n    };\n\n    _class.prototype.stripeProps = function stripeProps(stripe) {\n      return _extends({}, stripe, {\n        // These are the only functions that take elements.\n        createToken: this.wrappedCreateToken(stripe),\n        createSource: this.wrappedCreateSource(stripe),\n        createPaymentMethod: this.wrappedCreatePaymentMethod(stripe),\n        handleCardPayment: this.wrappedHandleCardX(stripe, 'handleCardPayment'),\n        handleCardSetup: this.wrappedHandleCardX(stripe, 'handleCardSetup')\n      });\n    };\n\n    // Finds an Element by the specified type, if one exists.\n    // Throws if multiple Elements match.\n\n\n    // Require that exactly one Element is found for the specified type.\n    // Throws if no Element is found.\n\n\n    // Wraps createToken in order to infer the Element that is being tokenized.\n\n\n    // Wraps createSource in order to infer the Element that is being used for\n    // source creation.\n\n\n    // Wraps createPaymentMethod in order to infer the Element that is being\n    // used for PaymentMethod creation.\n\n\n    _class.prototype.render = function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {\n        stripe: this.state.stripe,\n        elements: this.context.elements,\n        ref: withRef ? function (c) {\n          _this3.wrappedInstance = c;\n        } : null\n      }));\n    };\n\n    return _class;\n  }(_react2.default.Component), _class.contextTypes = _extends({}, _Provider.providerContextTypes, _Elements.injectContextTypes), _class.displayName = 'InjectStripe(' + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + ')', _temp;\n};\n\nexports.default = inject;"},"lineCount":309}},"error":null,"hash":"fa0262d8d9dfff7cb9431cae5f5dbf9a","cacheData":{"env":{}}}